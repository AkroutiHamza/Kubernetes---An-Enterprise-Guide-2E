---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: create-operations-production
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-workflows
    app.kubernetes.io/part-of: openunison
spec:
  description: Create production operations application in argocd
  inList: false
  label: Create Production Operations Application
  orgId: 9d251de8-e481-45da-b22c-c8c98952e581
  dynamicConfiguration:
    dynamic: false
    className: ""
    params: []
  tasks: |-
    
    # create an operations project in gitlab
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateProject
      params:
        namespace: $nameSpace$-production
        name: $nameSpace$-operations
        description: Operations project
        issuesEnabled: "true"
        mergeRequestsEnabled: "true"
        wikiEnabled: "true"
        snipitsEnabled: "true"
        visibility: "2"
        targetName: gitlab
        gitSshHost: {{ .Values.openunison.non_secret_data.GITLAB_SSH_HOST | quote }}
        createWebhook: "false"
        webhookSuffix: {{ .Values.openunison.non_secret_data.GITLAB_WEBHOOK_SUFFIX | quote }}
        webhookBranchFilter: "main"
    
    # create a git file so there's something in the repo
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateGitFile
      params:
        targetName: gitlab
        namespace: $nameSpace$-production
        project: $nameSpace$-operations
        branch: main
        path: README.md
        content: |-
          # $nameSpace$-build 

          Fork this project to create manifests for $nameSpace$.  Create a pull request to deploy updates.
        commitMessage: initializing the repository

    # create a git repo in argocd that is connected to our operations project in gitlab
    - taskType: customTask
      className: com.tremolosecurity.argocd.tasks.CreateGitRepository
      params:
        type: git
        name: $nameSpace$-operations
        repoUrl: "$gitSshInternalURL$"
        sshPrivateKey: $gitPrivateKey$
        target: argocd

    # approvers need to be able to approve pull requests
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: approvers-k8s-$nameSpace$
        targetName: gitlab
        accessLevel: MAINTAINER

    # operations need to be able to fork for development
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: k8s-namespace-operations-$nameSpace$
        targetName: gitlab
        accessLevel: DEVELOPER

    # developers need to be able to fork for development
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: k8s-namespace-developer-$nameSpace$
        targetName: gitlab
        accessLevel: DEVELOPER

    
    # create the production namespace
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params:
        targetName: k8s
        kind: Namespace
        url: /api/v1/namespaces
        srcType: yaml
        template: |-
          kind: Namespace
          apiVersion: v1
          metadata:
            name: $nameSpace$-prod
            labels:
              name: $nameSpace$-prod
              application: $nameSpace$
              type: application
              env: prod

    # create rolebinding for admins
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params:
        targetName: k8s
        kind: RoleBinding
        url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$-prod/rolebindings
        srcType: yaml
        template: |-
          kind: RoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: operations-binding
            namespace: $nameSpace$-prod
          subjects:
            - kind: Group
              name: k8s-namespace-operations-$nameSpace$
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: admin
            apiGroup: rbac.authorization.k8s.io

    # create rolebinding for developers
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params:
        targetName: k8s
        kind: RoleBinding
        url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$-prod/rolebindings
        srcType: yaml
        template: |-
          kind: RoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: developers-binding
            namespace: $nameSpace$-prod
          subjects:
            - kind: Group
              name: k8s-namespace-developer-$nameSpace$
              apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: view
            apiGroup: rbac.authorization.k8s.io

